<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="RingTokenHasCTL" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TokenUpdateIN" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE13" />
        <With Var="TokenIN" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="TokenUpdate" >
        <With Var="Token" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE13" Type="BOOL" />
      <VarDeclaration Name="TokenIN" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="Token" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="TOKEN" x="1072.2222" y="1077.7777" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
        <ECAction Algorithm="DISCARD" Output="TokenUpdate" />
      </ECState>
      <ECState Name="NO_TOKEN" x="1166.6666" y="327.77777" >
        <ECAction Algorithm="SEND" Output="TokenUpdate" />
        <ECAction Algorithm="SEND" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="INIT" x="227.77777" y="1061.1111" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CRITICAL_SECTION" x="1144.4445" y="1888.8888" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CRITICAL_SECTION_Dept" x="1144.4445" y="2438.889" >
      </ECState>
      <ECState Name="CS_FROZEN" x="2455.5554" y="2427.7776" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WANT" x="1144.4445" y="1483.3333" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECTransition Source="TOKEN" Destination="NO_TOKEN" Condition="REQ&#38;PE" x="1416.6666" y="677.7778" />
      <ECTransition Source="NO_TOKEN" Destination="TOKEN" Condition="TokenUpdateIN&#38;TokenIN" x="905.55554" y="550.0" />
      <ECTransition Source="INIT" Destination="TOKEN" Condition="1" x="227.77777" y="716.6666" />
      <ECTransition Source="TOKEN" Destination="INIT" Condition="INIT" x="227.77777" y="1444.4443" />
      <ECTransition Source="TOKEN" Destination="CRITICAL_SECTION" Condition="REQ&#38;!PE" x="461.11108" y="1911.1111" />
      <ECTransition Source="CRITICAL_SECTION" Destination="CRITICAL_SECTION_Dept" Condition="REQ&#38;PE" x="1144.4445" y="2211.111" />
      <ECTransition Source="CRITICAL_SECTION_Dept" Destination="CS_FROZEN" Condition="REQ&#38;!PE" x="1961.1111" y="2427.7776" />
      <ECTransition Source="CRITICAL_SECTION_Dept" Destination="NO_TOKEN" Condition="REQ&#38;!PE13" x="2522.2222" y="1105.5555" />
      <ECTransition Source="CS_FROZEN" Destination="NO_TOKEN" Condition="REQ&#38;!PE13" x="2455.5554" y="1333.3333" />
      <ECTransition Source="WANT" Destination="CRITICAL_SECTION" Condition="TokenUpdateIN&#38;TokenIN" x="1144.4445" y="1677.7777" />
      <ECTransition Source="NO_TOKEN" Destination="WANT" Condition="REQ&#38;!PE" x="311.11108" y="327.77777" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <Other Language="Java" Text="if(Candidate.value){&#10;if(lastPE.value!=PE.value){&#10;if(!PE.value){&#10;BlockCon.value=true;&#10;}&#10; else {&#10;BlockCon.value=false;&#10;}&#10;lastPE.value=PE.value;&#10;}&#10;if(lastBlock.value!=Block.value){&#10;if(Block.value){&#10;STOP.serviceEvent(this);&#10;MotoRotate.value=false;&#10;}&#10; else {&#10;START.serviceEvent(this);&#10;MotoRotate.value=true;&#10;}&#10;lastBlock.value=Block.value;&#10;}&#10;}&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;" />
  </Algorithm>
  <Algorithm Name="DISCARD" >
    <Other Language="Java" Text="Token.value = false;&#10;" />
  </Algorithm>
  <Algorithm Name="SEND" >
    <Other Language="Java" Text="Token.value = true;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
