<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="CENTRALConCTL" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE_ENTER" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_EXIT" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE_ENTER" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_EXIT" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TOK_GIVEN" >
        <With Var="PE_ENTER" />
        <With Var="Block" />
        <With Var="PE_EXIT" />
        <With Var="Candidate" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="START" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="TOK_REQ" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="TOK_REL" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE_ENTER" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE_EXIT" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="STILL" Comment="Initial State" x="1294.1177" y="835.2941" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="1435.2941" y="147.05882" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="START_ENTER" x="1188.2352" y="1482.3529" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="RECEIVED_TOKEN" x="1205.8823" y="1776.4706" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="NEW_BAG_ENTER" x="1217.6471" y="2764.7058" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="FINSIHED_ENTER" x="1205.8823" y="2311.7646" >
      </ECState>
      <ECState Name="START_EXIT" x="4870.5884" y="2311.7646" >
      </ECState>
      <ECState Name="START_EXIT_STOP_NEW_BAG" x="3252.9412" y="3164.7058" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="FINISH_EXIT_RELEASE_TOKEN" x="2711.7646" y="1158.8235" >
        <ECAction Output="TOK_REL" />
      </ECState>
      <ECState Name="FINISH_EXIT_START_NEW_BAG" x="658.8235" y="3911.7646" >
        <ECAction Output="TOK_REL" />
      </ECState>
      <ECTransition Source="STILL" Destination="INIT" Condition="INIT" x="1294.1177" y="141.17647" />
      <ECTransition Source="INIT" Destination="STILL" Condition="1" x="1670.5883" y="458.82352" />
      <ECTransition Source="START_ENTER" Destination="RECEIVED_TOKEN" Condition="TOK_GIVEN" x="1188.2352" y="1741.1764" />
      <ECTransition Source="RECEIVED_TOKEN" Destination="FINSIHED_ENTER" Condition="REQ&#38;PE_ENTER" x="1205.8823" y="1994.1176" />
      <ECTransition Source="FINSIHED_ENTER" Destination="NEW_BAG_ENTER" Condition="REQ&#38;!PE_ENTER" x="1217.6471" y="2494.1177" />
      <ECTransition Source="NEW_BAG_ENTER" Destination="START_EXIT_STOP_NEW_BAG" Condition="REQ&#38;!PE_EXIT" x="1217.6471" y="3164.7058" />
      <ECTransition Source="FINSIHED_ENTER" Destination="START_EXIT" Condition="REQ&#38;!PE_EXIT" x="3152.9412" y="2311.7646" />
      <ECTransition Source="STILL" Destination="START_ENTER" Condition="REQ&#38;!PE_ENTER" x="1294.1177" y="1205.8823" />
      <ECTransition Source="FINISH_EXIT_RELEASE_TOKEN" Destination="STILL" Condition="1" x="1658.8235" y="1152.9412" />
      <ECTransition Source="START_EXIT" Destination="FINISH_EXIT_RELEASE_TOKEN" Condition="REQ&#38;PE_EXIT" x="3852.9412" y="1729.4117" />
      <ECTransition Source="FINISH_EXIT_START_NEW_BAG" Destination="START_ENTER" Condition="1" x="658.8235" y="1482.3529" />
      <ECTransition Source="START_EXIT_STOP_NEW_BAG" Destination="FINISH_EXIT_START_NEW_BAG" Condition="REQ&#38;PE_EXIT" x="1729.4117" y="3570.5881" />
      <ECTransition Source="START_EXIT" Destination="START_EXIT_STOP_NEW_BAG" Condition="REQ&#38;!PE_ENTER" x="4870.5884" y="3764.7058" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE_ENTER THEN&#10;IF NOT PE_ENTER THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE_ENTER;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
